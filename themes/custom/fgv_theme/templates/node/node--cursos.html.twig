{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
  ]
%}
<div class="py-5" style="	background-image: url(&quot;{{base_path ~ directory }}/images/bg1.png&quot;);	background-position: top left;	background-size: cover;	background-repeat: no-repeat;">
<div class="container">
  <div class="row">
    <div class="col-md-12">
      <h1 class="text-white">{{ label }}</h1>
    </div>
  </div>
</div>
</div>
<div class="py-2 border-bottom">
<div class="container">
  <div class="row">
    <div class="col-md-12 col-lg-8 px-0">
      <a class="btn" href="{{base_path}}cursos"><i class="fa-solid fa-arrow-left mr-2 text-primary"></i>Voltar para p√°gina de cursos</a>
    </div>
  </div>
</div>
</div>
<div class="d-block d-sm-nonept-3 py-4">
<div class="container">
  <div class="row d-flex flex-row justify-content-center">
    <div class="col-md-12 col-lg-8">
      {# <div class="embed-responsive embed-responsive-16by9">
        <iframe src="https://player.vimeo.com/video/239823487?title=0&amp;byline=0&amp;portrait=0" allowfullscreen="" class="embed-responsive-item"></iframe>
      </div> #}
      {{content.field_video_cur}}
      <p class="mt-3">{{content.body}}</p>
        {{content.field_imagem_}}
      <p class="mt-3">{{content.field_descricao_2}}</p>
    </div>
  </div>
</div>
</div>

<div class="d-block d-sm-nonept-3 bg-light py-5">
<div class="container">
  <div class="row">
    <div class="col-md-12">
      <h2 class="text-black text-left">Cursos Recentes</h2>
    </div>
  </div>
  <div class="row pt-4">
  {{content_cursos_recente}}
  </div>
</div>
</div>

<script>
// $('.col-3 > .views-field.views-field-created > span').prepend('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-calendar3" viewBox="0 0 16 16"><path d="M14 0H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zM1 3.857C1 3.384 1.448 3 2 3h12c.552 0 1 .384 1 .857v10.286c0 .473-.448.857-1 .857H2c-.552 0-1-.384-1-.857V3.857z"/><path d="M6.5 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"/></svg>')
$('.col-md-4.d-flex.flex-column.justify-content-between.align-items-stretch > .card > .card-body > a').html('Ver Curso ').append('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/></svg>')

// cursos recentes
// data
  $('#views-bootstrap-cursos-recentes-block-1 > div > div .views-field.views-field-created').css('background-color', 'white')
  $('#views-bootstrap-cursos-recentes-block-1 > div > div .views-field.views-field-created').css('font-weight', '600')
  $('#views-bootstrap-cursos-recentes-block-1 > div > div .views-field.views-field-created').addClass('pt-2 pl-2')
  $('#views-bootstrap-cursos-recentes-block-1 > div > div .views-field.views-field-created > span').addClass('mb-0 my-2 text-dark')

// titulo
  $('#views-bootstrap-cursos-recentes-block-1 > div > div .views-field.views-field-title').css('background-color', 'white')
  $('#views-bootstrap-cursos-recentes-block-1 > div > div .views-field.views-field-title').css('font-weight', '600')
  $('#views-bootstrap-cursos-recentes-block-1 > div > div .views-field.views-field-title').addClass('pt-2 pl-2')
  $('#views-bootstrap-cursos-recentes-block-1 > div > div .views-field.views-field-title > span').addClass('mb-0 ')
  $('#views-bootstrap-cursos-recentes-block-1 > div > div .views-field.views-field-title > span').css('font-size','1.25rem')

</script>
